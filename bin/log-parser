#!/usr/bin/env node

var argv = require('minimist')(process.argv.slice(2));
var winston = require('winston');

var LogParser = require('../');
var config = require('../src/config.js');


// get logger and setup log levels
var log = new (winston.Logger)({
  transports: [
    new (winston.transports.Console)({
      level: 'info',
      timestamp: true,
      colorize: true
    })
  ]
});

// check for debug mode flag
if (argv.d || argv.debug) {
  log.transports.console.level = 'debug';
}


// get start date to query log records
var start = new Date();
if (argv.s) start = new Date(argv.s);
else if (argv.start) start = new Date(argv.start);

if (!(start instanceof Date)) {
  log.error('invalid start date');
  process.exit();
}


// get log format
var format = "combined";
if (argv.f) format = argv.f;
else if (argv.format) format = argv.format;


// get log directory
var directory = './log';
if (argv.d) file = argv.d;
else if (argv.dir) file = argv.dir;


// setup new log parser
var parser = new LogParser(config, format);

parser.on('debug', log.debug);
parser.on('info', log.info);
parser.on('warn', log.warn);
parser.on('error', log.error);

// parse directory
parser.parse(directory, start);